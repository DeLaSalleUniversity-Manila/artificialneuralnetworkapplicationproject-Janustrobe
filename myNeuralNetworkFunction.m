function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Dec-2015 11:47:17.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 1xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = 2;
  x1_step1_gain = 0.0952380952380952;
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [12.859047298167571;9.9749612906531606;-7.2677951555671356;5.0151934367418951;2.3749032428885983;0.52135836448924178;5.7883809074055605;7.7455431024011752;10.986078295585983;-14.063559387681767];
  IW1_1 = [-14.980442344924869;-14.620888660091929;14.119743073006125;-14.125220629365293;-13.391343279069419;12.200725057447201;13.718062319690359;14.022244800727599;13.91412767518635;-13.928469305773179];
  
  % Layer 2
  b2 = -0.16442055574089093;
  LW2_1 = [-0.18144314928259128 0.088303372220242621 0.032103028296522305 -0.14911605331103367 -0.03529371467350452 0.13773713223712519 1.4346081202409133 -1.3404606244726807 0.30599924195739137 -0.077699012135544365];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2.88309067320167e-05;
  y1_step1_xoffset = 12034;
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
